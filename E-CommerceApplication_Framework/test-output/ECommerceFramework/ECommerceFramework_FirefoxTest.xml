<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="4" hostname="DESKTOP-281OCTQ" failures="0" tests="12" name="ECommerceFramework_FirefoxTest" time="0.701" errors="0" timestamp="2024-10-07T12:19:35 IST">
  <testcase classname="baseClass.Base" name="@BeforeClass createBrowserInstance" time="0.013">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;java.lang.reflect.Method.getName()&amp;quot; because &amp;quot;testMethod&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "java.lang.reflect.Method.getName()" because "testMethod" is null
at baseClass.Base.createBrowserInstance(Base.java:52)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass createBrowserInstance -->
  <testcase classname="baseClass.Base" name="@BeforeClass createBrowserInstance" time="0.014">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;java.lang.reflect.Method.getName()&amp;quot; because &amp;quot;testMethod&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "java.lang.reflect.Method.getName()" because "testMethod" is null
at baseClass.Base.createBrowserInstance(Base.java:52)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass createBrowserInstance -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283774955E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@BeforeClass createBrowserInstance" time="0.001">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;java.lang.reflect.Method.getName()&amp;quot; because &amp;quot;testMethod&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "java.lang.reflect.Method.getName()" because "testMethod" is null
at baseClass.Base.createBrowserInstance(Base.java:52)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass createBrowserInstance -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@BeforeClass createBrowserInstance" time="0.001">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;java.lang.reflect.Method.getName()&amp;quot; because &amp;quot;testMethod&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "java.lang.reflect.Method.getName()" because "testMethod" is null
at baseClass.Base.createBrowserInstance(Base.java:52)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass createBrowserInstance -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775044E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@BeforeClass createBrowserInstance" time="0.001">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;java.lang.reflect.Method.getName()&amp;quot; because &amp;quot;testMethod&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "java.lang.reflect.Method.getName()" because "testMethod" is null
at baseClass.Base.createBrowserInstance(Base.java:52)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass createBrowserInstance -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775103E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775106E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@BeforeClass createBrowserInstance" time="0.0">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;java.lang.reflect.Method.getName()&amp;quot; because &amp;quot;testMethod&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "java.lang.reflect.Method.getName()" because "testMethod" is null
at baseClass.Base.createBrowserInstance(Base.java:52)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass createBrowserInstance -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775123E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775171E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775159E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775195E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775213E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775243E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775271E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775302E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775311E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775313E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775338E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775344E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775351E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterClass tearDown" time="-1.728283775353E9">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775363E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775388E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775389E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterClass tearDown" time="-1.728283775392E9">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="baseClass.Base" name="@AfterClass tearDown" time="-1.728283775393E9">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775398E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterClass tearDown" time="-1.728283775413E9">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775418E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterClass tearDown" time="-1.728283775421E9">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="baseClass.Base" name="@AfterMethod getReport" time="-1.728283775428E9">
    <skipped/>
  </testcase> <!-- @AfterMethod getReport -->
  <testcase classname="baseClass.Base" name="@AfterClass tearDown" time="-1.728283775435E9">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="testcases.MultiProduct" name="searchFromGoogle" time="0.0">
    <skipped/>
  </testcase> <!-- searchFromGoogle -->
  <testcase classname="testcases.SingleProduct" name="searchFromGoogle" time="0.0">
    <skipped/>
  </testcase> <!-- searchFromGoogle -->
  <testcase classname="testcases.SingleProduct_MultipleQuantity" name="searchFromGoogle" time="0.0">
    <skipped/>
  </testcase> <!-- searchFromGoogle -->
  <testcase classname="testcases.MultiProduct" name="homePage" time="0.0">
    <skipped/>
  </testcase> <!-- homePage -->
  <testcase classname="testcases.SingleProduct" name="homePage" time="0.0">
    <skipped/>
  </testcase> <!-- homePage -->
  <testcase classname="testcases.SingleProduct_MultipleQuantity" name="homePage" time="0.0">
    <skipped/>
  </testcase> <!-- homePage -->
  <testcase classname="testcases.MultiProduct" name="checkoutPage" time="0.0">
    <skipped/>
  </testcase> <!-- checkoutPage -->
  <testcase classname="testcases.SingleProduct" name="checkoutPage" time="0.0">
    <skipped/>
  </testcase> <!-- checkoutPage -->
  <testcase classname="testcases.SingleProduct_MultipleQuantity" name="checkoutPage" time="0.0">
    <skipped/>
  </testcase> <!-- checkoutPage -->
  <testcase classname="testcases.MultiProduct" name="selectCountry" time="0.0">
    <skipped/>
  </testcase> <!-- selectCountry -->
  <testcase classname="testcases.SingleProduct" name="selectCountry" time="0.0">
    <skipped/>
  </testcase> <!-- selectCountry -->
  <testcase classname="testcases.SingleProduct_MultipleQuantity" name="selectCountry" time="0.0">
    <skipped/>
  </testcase> <!-- selectCountry -->
  <testcase classname="baseClass.Base" name="@BeforeSuite createReportConfigs" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite createReportConfigs -->
  <testcase classname="baseClass.Base" name="@BeforeSuite createReportConfigs" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite createReportConfigs -->
  <testcase classname="baseClass.Base" name="@AfterSuite flushReports" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite flushReports -->
  <testcase classname="baseClass.Base" name="@AfterSuite flushReports" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite flushReports -->
</testsuite> <!-- ECommerceFramework_FirefoxTest -->
